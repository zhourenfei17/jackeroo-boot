<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hub.jackeroo.system.mapper.SysUserMapper">

    <sql id="baseColumns">
        a.id as id,
        a.name as name,
        a.account as account,
        a.code as code,
        a.password as password,
        a.salt as salt,
        a.avatar as avatar,
        a.gender as gender,
        a.birthday as birthday,
        a.phone as phone,
        a.telephone as telephone,
        a.status as status,
        a.del_flag as delFlag,
        a.create_by as createBy,
        a.create_time as createTime,
        a.update_by as updateBy,
        a.update_time as updateTime
    </sql>

    <select id="findList" resultType="cn.hub.jackeroo.system.entity.SysUser">
        select
          <include refid="baseColumns"></include>
          ,c.id as roleId, c.role_name as roleName
        from sys_user a
        left join sys_user_role b on a.id=b.user_id
        left join sys_role c on b.role_id=c.id
        <where>
            <if test="name != null and name != ''">
                and a.name like CONCAT('%', #{name}, '%')
            </if>
            <if test="account != null and account != ''">
                and a.account like CONCAT('%', #{account}, '%')
            </if>
            <if test="status != null">
                and a.status = #{status}
            </if>
            <if test="phone != null and phone != ''">
                and a.phone like CONCAT('%', #{phone}, '%')
            </if>
            <if test="gender != null">
                and a.gender = #{gender}
            </if>
            <if test="delFlag != null">
                and a.del_flag = #{delFlag}
            </if>
        </where>
        <choose>
            <when test="orderBy != null">
                ${orderBY}
            </when>
            <otherwise>
                order by a.create_time asc
            </otherwise>
        </choose>
    </select>

    <select id="findByAccount" resultType="cn.hub.jackeroo.system.entity.SysUser">
        select
          <include refid="baseColumns"></include>
          ,b.role_id as roleId,c.role_code as roleCode
        from sys_user a
        left join sys_user_role b on a.id=b.user_id
        left join sys_role c on b.role_id=c.id
        <where>
            a.account = #{account}
        </where>
    </select>

    <select id="findById" resultType="cn.hub.jackeroo.system.entity.SysUser">
        select
        <include refid="baseColumns"></include>
        ,c.id as roleId, c.role_name as roleName
        from sys_user a
        left join sys_user_role b on a.id=b.user_id
        left join sys_role c on b.role_id=c.id
        <where>
            a.id = #{userId}
        </where>
    </select>
</mapper>
