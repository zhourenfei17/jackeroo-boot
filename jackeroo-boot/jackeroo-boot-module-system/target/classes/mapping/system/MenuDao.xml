<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hub.jackeroo.system.dao.MenuDao">
    
	<sql id="menuColumns">
		a.id AS "id",
		a.parent_id AS "parentId",
		a.parent_ids AS "parentIds",
		a.name AS "name",
		a.sort AS "sort",
		a.href AS "href",
		a.target AS "target",
		a.icon AS "icon",
		a.is_show AS "isShow",
		a.permission AS "permission",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		p.name AS "parent.name"
	</sql>
	
	<sql id="menuJoins">
		LEFT JOIN admin_menu p ON p.id = a.parent_id
	</sql>
    
	<select id="get" resultType="Menu">
		SELECT 
			<include refid="menuColumns"/>
		FROM admin_menu a
		<include refid="menuJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="getAllMenuByRoleId" resultType="Menu">
		select
		<include refid="menuColumns"/>
		from admin_menu a left join admin_role_menu b on a.id=b.menu_id
		where b.role_id=#{roleId} and a.del_flag=0
	</select>

	<select id="getMaxSortByPid" resultType="int">
		select
		case when max(a.sort) is null then 0 else max(a.sort) end
		from admin_menu a where parent_id=#{pid} and del_flag=0
	</select>

	<select id="findByRoleId" resultType="Menu">
		SELECT DISTINCT
		<include refid="menuColumns"/>
		FROM admin_menu a
		LEFT JOIN admin_menu p ON p.id = a.parent_id
		JOIN admin_role_menu rm ON rm.menu_id = a.id
		WHERE a.del_flag = 0  and rm.role_id=#{roleId}
		<if test="parentId != null and parentId != ''">
			and a.parent_id = #{parentId}
		</if>
		<if test="isShow != null and isShow != ''">
			and a.is_show = #{isShow}
		</if>
		ORDER BY a.sort
	</select>

	<!-- 根据角色查询菜单列表,查询所有的菜单，标记自己拥有的 -->
	<select id="findMenuByRole" resultType="Menu">
		select a.id,
		a.parent_id AS "parent.id",
		a.parent_ids,
		a.name,
		a.href,
		a.target,
		a.icon,
		a.sort,
		a.is_show,
		a.permission,
		a.remarks,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag,
		(case when b.role_id > 0 then 1 else 0 end) as "isCheck"
		from admin_menu a left join admin_role_menu b on a.id=b.menu_id and b.role_id=#{roleId}
		where a.del_flag = #{DEL_FLAG_NORMAL}
	</select>

	<select id="findByParentIdsLike" resultType="Menu">
		SELECT
			a.id,
			a.parent_id AS "parent.id",
			a.parent_ids
		FROM admin_menu a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND a.parent_ids LIKE #{parentIds}
		ORDER BY a.sort
	</select>
	
	<select id="findList" resultType="Menu">
		SELECT 
			<include refid="menuColumns"/>
		FROM admin_menu a
		<include refid="menuJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="orderBy != null and orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Menu">
		SELECT 
			<include refid="menuColumns"/>
		FROM admin_menu a
		<include refid="menuJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="isShow != null">
				and a.is_show=#{isShow}
			</if>
		</where>		
		<choose>
			<when test="orderBy != null and orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.sort asc
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO admin_menu(
			parent_id,
			parent_ids,
			name,
			sort,
			href,
			target,
			icon,
			is_show,
			permission,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{parentId},
			#{parentIds},
			#{name},
			#{sort},
			#{href},
			#{target},
			#{icon},
			#{isShow},
			#{permission},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE admin_menu 
		<set> 	
			<if test="parentId != null">
				parent_id = #{parentId},
			</if>
			<if test="parentIds != null and parentIds != ''">
				parent_ids = #{parentIds},
			</if>
			<if test="name != null and name != ''">
				name = #{name},
			</if>
			<if test="sort != null">
				sort = #{sort},
			</if>
			<if test="href != null and href != ''">
				href = #{href},
			</if>
			<if test="target != null and target != ''">
				target = #{target},
			</if>
			<if test="icon != null and icon != ''">
				icon = #{icon},
			</if>
			<if test="isShow != null and isShow != ''">
				is_show = #{isShow},
			</if>
			<if test="permission != null and permission != ''">
				permission = #{permission},
			</if>
			<if test="createBy != null and createBy.id != null">
				create_by = #{createBy.id},
			</if>
			<if test="createDate != null and createDate != ''">
				create_date = #{createDate},
			</if>
			<if test="updateBy != null and updateBy.id != null">
				update_by = #{updateBy.id},
			</if>
			<if test="updateDate != null and updateDate != ''">
				update_date = #{updateDate},
			</if>
			<if test="remarks != null and remarks != ''">
				remarks = #{remarks},
			</if>
			<if test="delFlag != null and delFlag != ''">
				del_flag = #{delFlag},
			</if>
		</set>
		WHERE id = #{id}
	</update>

	<update id="updateParentIds">
		UPDATE admin_menu SET
			parent_id = #{parent.id},
			parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE admin_menu SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>